console.log('number' + 3 + 3) 
/* конвертування відбувається з ліва на право, 
'number' це string, якщо після string йде +, то js перетворює наступне значенння також на string, 
таким чином 3 та 3 перетворилися на string, результат стрінгове значення number33 */

console.log(null + 3)
/* null у JS це false, а false це числове значення 0, отже 0 + 3 буде результат числове значення 3 */

console.log(5 && "qwerty")
/* оператор AND повертає останнє true, якщо всі значення true (але якщо немає, true то повертає перше false)
у даному виразі число 5 це true (всі позитивні числа у JS це true) далі це стрінги, оскільки це не пусте значення
то це також true, яке і виводиться, результат стрінгове значення qwerty */

console.log(+'40' + +'2' + "hillel")
/* плюс перед '40' та '2' переводить ці значення у number, отже 4 + 2 = 42,
наступне значення string (коли додаються number та string у JS, то вони перетворюються на string), результат стрінгове значення 42hillel */

console.log('10' - 5 === 6)
/* мінус після значення перетворює це значення у число, отже 10 - 5 == 6, це хибне значення, оскфлки 5 не дорівню 6, тому результат boolean значення false  */

console.log(true + false)
/* значення + з boolean перетворює значення на цифри, отде true це 1, false це 0, 1 + 0 = 1, результат числове значення 1 */

console.log('4px' - 3)
/* значення мінус після елемента намагається перетворить його у число, але оскільки це string, який містять не тільки цифри але і букви,
 то результат буде NaN (not a number), NaN - 3 результат NaN */

console.log('4' - 3)
/* значення мінус після елементу перетворює його на number, 4 - 3 = 1, результат числове значення 1 */

console.log('6' + 3 ** 0)
/* спочатку виконується 3 ** 0 (number у 0 степені у js це 1), далі виконується '6' + 1
як було зазначено вище, + після string перетворює наступне значення на sring, результат стрінгове значення 61 */

console.log(12 / '6')
/* значення ділення після елементу перетворює його на number, 12 / 6 = 2, результат числове значення 2 */

console.log('10' + (5 === 6))
/* спочатку виконується умова що у дужках, 5 не рівно 6, отже результат false, 
далі виконується наступний вираз '10' + false, так яу + після string перетворює наступне значення також на sring, результат стрінгове значення 10false */

console.log(null == '')
/* значення null може дорівнювати тільки underfined, null/underfined не дорівнюють пустому рядку (flase) результат boolean значення false */

console.log(3 ** (9 / 3))
/* спочатку 9 ділиться на 3 , результат 3, далі 3 у степені 3 буде 27, результат числове значення 27 */

console.log(!!'false' == !!'true')

/* 'false' та 'true' це не пусті рядки відповідно їх значення  буде true для обох (boolean), 
при подвйній конвертації, получиться що true перетворилося на false і далі знову на true, a true == true, результат boolean значення true */

console.log(0 || '0' && 1)
/* && оператор має більшу приорітетність у js ніж ||, і виводить останній true елемент в даноум випадку, 
тому це 1 ('0' це не пустий рядок значить також true),
далі виконується 0 || 1 -> оператор OR виводить перше true значення в даному виразі, результат  числове значення 1 */

console.log((+null == false) < 1)
/*  + перед елементом приводить його до number, коли null  приводиться до числа то це 0
отже 0 == false, вихід буде true, оскільки це вірне твердження,
далі маємо true < 1, (true в js це 1), отже 1 < 1, це не вірне твердження , результат boolean значення false */

console.log(false && true || true)
/* && виводить останнє true значення в даному випадку, як наслідок true || true, 
 оператор || виводить також перше true значення у даному випадку, результат boolean значення true */

 console.log(false && (true || true))
/* після виконання виразу true || true , результат true
далі false && true, оператор && виводить перше false значення або остfyyz true, результат boolean значення false */

console.log((+null == false) < 1 ** 5)
/* це те саме пояснення що і у рядках 59-61, 1 < 1 (один у 5й степені = 1), результат boolean значення false */